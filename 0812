#!/bin/bash

# Palworld 서버 관리 및 팰셰마 설치 통합 스크립트
# 버전: 1.0
# 설명: 팰셰마 설치와 Palworld 서버 관리를 자동화하는 스크립트

# ----------------------------------
# 초기 설정
# ----------------------------------
set -euo pipefail  # 엄격한 오류 처리

# 현재 스크립트 실행 디렉토리 저장
INITIAL_DIR=$(pwd)

# 필수 명령어 경로 (시스템에 맞게 조정)
DOCKER_BIN="/usr/bin/docker"
DOCKER_COMPOSE_BIN="/usr/local/bin/docker-compose"
SLEEP_BIN="/bin/sleep"
ECHO_BIN="/usr/bin/echo"

# 서버 설정
YAML_FILE="/home/$(whoami)/palworld-wine/docker-compose.yml"
CONTAINER_NAME="palworld-wine-server"
PALSCHEMA_VERSION="0.5.0"
DOWNLOAD_URL="https://github.com/Okaetsu/PalSchema/releases/download/${PALSCHEMA_VERSION}/PalSchema_${PALSCHEMA_VERSION}.zip"

# 팰셰마 설치 경로
MODS_DIR="/home/$(whoami)/palworld-wine/PalServer/Pal/Binaries/Win64/ue4ss/Mods"

# ----------------------------------
# 로깅 함수
# ----------------------------------
print_info() {
    ${ECHO_BIN} -e "\033[1;34m[ℹ]\033[0m $1"
}

print_success() {
    ${ECHO_BIN} -e "\033[1;32m[✓]\033[0m $1"
}

print_warning() {
    ${ECHO_BIN} -e "\033[1;33m[⚠]\033[0m $1" >&2
}

print_error() {
    ${ECHO_BIN} -e "\033[1;31m[✗]\033[0m $1" >&2
    exit 1
}

# ----------------------------------
# 의존성 확인
# ----------------------------------
check_dependencies() {
    local missing=()
    
    # 명령어 존재 확인
    for cmd in docker docker-compose wget unzip; do
        if ! command -v "$cmd" &> /dev/null; then
            missing+=("$cmd")
        fi
    done
    
    # 파일 존재 확인
    for file in "$YAML_FILE" "$MODS_DIR"; do
        if [ ! -e "$file" ]; then
            missing+=("$file (파일 없음)")
        fi
    done
    
    if [ ${#missing[@]} -gt 0 ]; then
        print_error "필수 항목 누락: ${missing[*]}"
    fi
}

# ----------------------------------
# 팰셰마 설치 함수
# ----------------------------------
install_palschema() {
    local zip_file="PalSchema_${PALSCHEMA_VERSION}.zip"
    local tmp_dir
    tmp_dir=$(mktemp -d)
    
    print_info "팰셰마 v${PALSCHEMA_VERSION} 설치 시작"
    
    # 1. 다운로드
    print_info "다운로드 중: ${DOWNLOAD_URL}"
    if ! wget -q --show-progress "$DOWNLOAD_URL" -O "${tmp_dir}/${zip_file}"; then
        rm -rf "$tmp_dir"
        print_error "팰셰마 다운로드 실패"
    fi
    
    # 2. 기존 팰셰마 삭제 (존재하는 경우)
    if [ -d "${MODS_DIR}/PalSchema" ]; then
        print_info "기존 팰셰마 제거 중"
        rm -rf "${MODS_DIR}/PalSchema"
    fi
    
    # 3. 압축 해제
    print_info "압축 해제 중: ${MODS_DIR}"
    if ! unzip -q -o "${tmp_dir}/${zip_file}" -d "$MODS_DIR"; then
        rm -rf "$tmp_dir"
        print_error "압축 해제 실패"
    fi
    
    # 4. 정리
    rm -rf "$tmp_dir"
    print_success "팰셰마 v${PALSCHEMA_VERSION} 설치 완료"
}

# ----------------------------------
# 서버 상태 관리 함수
# ----------------------------------
is_server_running() {
    ${DOCKER_BIN} ps --format '{{.Names}}' | grep -q "^${CONTAINER_NAME}$"
    return $?
}

stop_server() {
    if is_server_running; then
        print_info "서버 중지 준비 중..."
        
        # 플레이어들에게 알림
        ${DOCKER_BIN} exec -i "${CONTAINER_NAME}" rconcli "Broadcast ServerWillRestartIn5Minutes" || true
        
        # 저장 명령 전송
        print_info "월드 저장 중..."
        ${DOCKER_BIN} exec -i "${CONTAINER_NAME}" rconcli "Save" || true
        ${SLEEP_BIN} 5
        
        # 서버 중지
        print_info "서버 중지 중..."
        ${DOCKER_COMPOSE_BIN} -f "${YAML_FILE}" down
        print_success "서버 중지 완료"
    else
        print_info "서버가 이미 중지된 상태입니다"
    fi
}

start_server() {
    print_info "서버 시작 중..."
    
    # 이미지 업데이트
    ${DOCKER_COMPOSE_BIN} -f "${YAML_FILE}" pull
    
    # 서버 시작
    ${DOCKER_COMPOSE_BIN} -f "${YAML_FILE}" up -d
    
    # 상태 확인
    if is_server_running; then
        print_success "서버 시작 완료"
        print_info "3분 후 게임 접속 가능"
    else
        print_error "서버 시작 실패"
    fi
}

# ----------------------------------
# 0812 파일 정리 함수
# ----------------------------------
cleanup_0812_file() {
    local target_file="${INITIAL_DIR}/0812"
    
    if [[ -f "$target_file" ]]; then
        if rm -f "$target_file"; then
            print_success "0812 파일 삭제 완료: ${target_file}"
        else
            print_warning "0812 파일 삭제 실패: ${target_file}"
        fi
    else
        print_info "0812 파일이 존재하지 않습니다: ${target_file}"
    fi
}

# ----------------------------------
# 메인 실행 블록
# ----------------------------------
main() {
    print_info "Palworld 서버 관리 스크립트 시작"
    
    # 의존성 확인
    check_dependencies
    
    # 1. 서버 중지 (실행 중인 경우)
    stop_server
    
    # 2. 팰셰마 설치
    install_palschema
    
    # 3. 서버 시작
    start_server
    
    # 4. 0812 파일 정리
    cleanup_0812_file
    
    print_success "모든 작업이 완료되었습니다!"
}

main "$@"
